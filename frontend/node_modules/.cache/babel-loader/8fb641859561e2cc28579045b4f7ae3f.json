{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/Documents/Projects/React-Projects/todoList/frontend/src/todo/todoList.jsx\";\nimport React from 'react';\nimport ButtonCustom from '../template/buttonCustom';\nimport { Table } from 'react-bootstrap';\nexport default (props => {\n  const renderRows = () => {\n    const list = props.list || [];\n    return list.map(todo => React.createElement(\"tr\", {\n      key: todo._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: todo.done ? 'markedAsDone' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, todo.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(ButtonCustom, {\n      variant: \"success\",\n      icon: \"check\",\n      classes: \"btnCustom\",\n      size: \"sm\",\n      onClick: () => props.handleMarkAsDone(todo),\n      done: todo.done,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(ButtonCustom, {\n      variant: \"warning\",\n      icon: \"undo\",\n      classes: \"btnCustom\",\n      size: \"sm\",\n      onClick: () => props.handleMarkAsPending(todo),\n      done: !todo.done,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(ButtonCustom, {\n      variant: \"danger\",\n      icon: \"trash\",\n      classes: \"btnCustom\",\n      size: \"sm\",\n      onClick: () => props.handleRemove(todo),\n      done: !todo.done,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }))));\n  };\n\n  return React.createElement(Table, {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Descri\\xE7\\xE3o\"), React.createElement(\"th\", {\n    className: \"tableActions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"A\\xE7\\xF5es\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, renderRows()));\n});","map":{"version":3,"sources":["/home/jonathan/Documents/Projects/React-Projects/todoList/frontend/src/todo/todoList.jsx"],"names":["React","ButtonCustom","Table","props","renderRows","list","map","todo","_id","done","description","handleMarkAsDone","handleMarkAsPending","handleRemove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,gBAAeC,KAAK,IAAI;AAEpB,QAAMC,UAAU,GAAG,MAAM;AACjB,UAAMC,IAAI,GAAGF,KAAK,CAACE,IAAN,IAAc,EAA3B;AACA,WAAOA,IAAI,CAACC,GAAL,CAASC,IAAI,IAChB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAED,IAAI,CAACE,IAAL,GAAY,cAAZ,GAA6B,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDF,IAAI,CAACG,WAAvD,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAC,SAAtB;AAAgC,MAAA,IAAI,EAAC,OAArC;AAA6C,MAAA,OAAO,EAAC,WAArD;AAAiE,MAAA,IAAI,EAAC,IAAtE;AACQ,MAAA,OAAO,EAAE,MAAMP,KAAK,CAACQ,gBAAN,CAAuBJ,IAAvB,CADvB;AACqD,MAAA,IAAI,EAAEA,IAAI,CAACE,IADhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAC,SAAtB;AAAgC,MAAA,IAAI,EAAC,MAArC;AAA4C,MAAA,OAAO,EAAC,WAApD;AAAgE,MAAA,IAAI,EAAC,IAArE;AACQ,MAAA,OAAO,EAAE,MAAMN,KAAK,CAACS,mBAAN,CAA0BL,IAA1B,CADvB;AACwD,MAAA,IAAI,EAAE,CAACA,IAAI,CAACE,IADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAKI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAC,QAAtB;AAA+B,MAAA,IAAI,EAAC,OAApC;AAA4C,MAAA,OAAO,EAAC,WAApD;AAAgE,MAAA,IAAI,EAAC,IAArE;AACQ,MAAA,OAAO,EAAE,MAAMN,KAAK,CAACU,YAAN,CAAmBN,IAAnB,CADvB;AACiD,MAAA,IAAI,EAAE,CAACA,IAAI,CAACE,IAD7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ,CADG,CAAP;AAaP,GAfD;;AAiBA,SACA,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,UAAU,EADf,CAPJ,CADA;AAaH,CAhCD","sourcesContent":["import React from 'react'\nimport ButtonCustom from '../template/buttonCustom'\nimport { Table } from 'react-bootstrap'\n\nexport default props => {\n\n    const renderRows = () => {\n            const list = props.list || []\n            return list.map(todo =>(\n                <tr key={todo._id}>\n                    <td className={todo.done ? 'markedAsDone' : ''} >{todo.description}</td>\n                    <td>\n                        <ButtonCustom variant='success' icon='check' classes='btnCustom' size='sm'\n                                onClick={() => props.handleMarkAsDone(todo)} done={todo.done} ></ButtonCustom>\n                        <ButtonCustom variant='warning' icon='undo' classes='btnCustom' size='sm' \n                                onClick={() => props.handleMarkAsPending(todo)} done={!todo.done} ></ButtonCustom>\n                        <ButtonCustom variant='danger' icon='trash' classes='btnCustom' size='sm'\n                                onClick={() => props.handleRemove(todo)} done={!todo.done} ></ButtonCustom>\n                    </td>\n                </tr>\n            ))\n    }\n\n    return (\n    <Table className='table'>\n        <thead>\n            <tr>\n                <th>Descrição</th>\n                <th className='tableActions'>Ações</th>\n            </tr>\n        </thead>\n        <tbody>\n            {renderRows()}\n        </tbody>\n    </Table>\n    )\n}"]},"metadata":{},"sourceType":"module"}