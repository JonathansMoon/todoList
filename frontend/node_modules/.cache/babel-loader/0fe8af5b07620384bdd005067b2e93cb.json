{"ast":null,"code":"import _objectSpread from \"/home/jonathan/Documents/Projects/React-Projects/todoList/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/jonathan/Documents/Projects/React-Projects/todoList/frontend/src/todo/todo.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card } from 'react-bootstrap';\nimport TodoForm from './todoForm';\nimport TodoList from './todoList';\nimport PageHeader from '../template/pageHeader';\nconst URL = 'http://localhost:3003/api/todos';\nexport default class Todo extends Component {\n  // Faz a referenciação da class Todo pelo this\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      list: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleMarkAsDone = this.handleMarkAsDone.bind(this);\n    this.handleMarkAsPending = this.handleMarkAsPending.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.refresh();\n  } // e - evento, Target referesse ao input, e value ao valor do input\n\n\n  refresh(description = '') {\n    const search = description ? `&description__regex=/${description}/` : '';\n    axios.get(`${URL}?sort=-createdAt${search}`).then(resp => this.setState(_objectSpread({}, this.state, {\n      description,\n      list: resp.data\n    })));\n  }\n\n  handleSearch() {\n    this.refresh(this.state.description);\n  }\n\n  handleMarkAsDone(todo) {\n    axios.put(`${URL}/${todo._id}`, _objectSpread({}, todo, {\n      done: true\n    })).then(resp => this.refresh(this.state.description));\n  }\n\n  handleMarkAsPending(todo) {\n    axios.put(`${URL}/${todo._id}`, _objectSpread({}, todo, {\n      done: false\n    })).then(resp => this.refresh(this.state.description));\n  }\n\n  handleRemove(todo) {\n    axios.delete(`${URL}/${todo._id}`).then(resp => this.refresh(this.state.description));\n  }\n\n  handleClear() {\n    this.refresh();\n  }\n\n  handleChange(e) {\n    this.setState(_objectSpread({}, this.state, {\n      description: e.target.value\n    }));\n  }\n\n  handleAdd() {\n    const description = this.state.description;\n    axios.post(URL, {\n      description\n    }).then(resp => this.refresh());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"cardTodo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: '30rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(PageHeader, {\n      name: \"Tasks \",\n      small: \"of the day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      description: this.state.description,\n      handleChange: this.handleChange,\n      handleAdd: this.handleAdd,\n      handleSearch: this.handleSearch,\n      handleClear: this.handleClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(TodoList, {\n      list: this.state.list,\n      handleMarkAsDone: this.handleMarkAsDone,\n      handleMarkAsPending: this.handleMarkAsPending,\n      handleRemove: this.handleRemove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/jonathan/Documents/Projects/React-Projects/todoList/frontend/src/todo/todo.jsx"],"names":["React","Component","axios","Card","TodoForm","TodoList","PageHeader","URL","Todo","constructor","props","state","description","list","handleChange","bind","handleAdd","handleSearch","handleRemove","handleMarkAsDone","handleMarkAsPending","handleClear","refresh","search","get","then","resp","setState","data","todo","put","_id","done","delete","e","target","value","post","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport { Card } from 'react-bootstrap'\n\nimport TodoForm from './todoForm'\nimport TodoList from './todoList'\nimport PageHeader from '../template/pageHeader'\n\nconst URL = 'http://localhost:3003/api/todos'\n\nexport default class Todo extends Component{\n    // Faz a referenciação da class Todo pelo this\n    constructor(props) {\n        super(props)\n        this.state = { description: '', list: [] }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleAdd = this.handleAdd.bind(this)\n        this.handleSearch = this.handleSearch.bind(this)\n\n        this.handleRemove = this.handleRemove.bind(this)\n        this.handleMarkAsDone = this.handleMarkAsDone.bind(this)\n        this.handleMarkAsPending = this.handleMarkAsPending.bind(this)\n        this.handleClear = this.handleClear.bind(this)\n        this.refresh()\n    }\n    // e - evento, Target referesse ao input, e value ao valor do input\n    refresh(description = '') {\n        const search = description ? `&description__regex=/${description}/`: ''\n        axios.get(`${URL}?sort=-createdAt${search}`)\n                .then(resp => this.setState({...this.state, description, list: resp.data}))\n    }\n\n    handleSearch() {\n        this.refresh(this.state.description)\n    }\n\n    handleMarkAsDone(todo) {\n        axios.put(`${URL}/${todo._id}`, {...todo, done:true})\n            .then(resp => this.refresh(this.state.description))\n    }\n\n    handleMarkAsPending(todo) {\n        axios.put(`${URL}/${todo._id}`, {...todo, done:false})\n            .then(resp => this.refresh(this.state.description))\n    }\n    \n    handleRemove(todo) {\n        axios.delete(`${URL}/${todo._id}`)\n            .then(resp => this.refresh(this.state.description))\n    }\n\n    handleClear() {\n        this.refresh()\n   \n    }\n\n    handleChange(e) {\n        this.setState({...this.state, description: e.target.value})\n    }\n\n    handleAdd() {\n        const description =this.state.description\n        axios.post(URL, { description })\n            .then(resp => this.refresh())\n    }\n\n    render() {\n        return (\n            <div className=\"cardTodo\">\n                <Card style={{ width: '30rem' }}>\n                    <PageHeader name='Tasks ' small=\"of the day\" />\n                    <Card.Body>\n                        <TodoForm  description={this.state.description}\n                                handleChange={this.handleChange}\n                                handleAdd={this.handleAdd}\n                                handleSearch={ this.handleSearch } \n                                handleClear={ this.handleClear}/>\n                        <TodoList list={this.state.list}\n                                handleMarkAsDone={ this.handleMarkAsDone }\n                                handleMarkAsPending={ this.handleMarkAsPending }\n                                handleRemove={ this.handleRemove }/>\n                    </Card.Body>\n                </Card>            \n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}